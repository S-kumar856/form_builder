ðŸ“‚ form-builder-app
â”œâ”€â”€ ðŸ“‚ frontend (ReactJS + Tailwind CSS)
â”‚   â”œâ”€â”€ ðŸ“‚ src
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ components
â”‚   â”‚   â”‚   â”œâ”€â”€ FormList.js (Displays all forms)
â”‚   â”‚   â”‚   â”œâ”€â”€ FormBuilder.js (Component for creating/editing a form)
â”‚   â”‚   â”‚   â”œâ”€â”€ FormView.js (View a form and submit responses)
â”‚   â”‚   â”‚   â”œâ”€â”€ InputField.js (Reusable input field component)
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ pages
â”‚   â”‚   â”‚   â”œâ”€â”€ Home.js (/ - Home page displaying all forms)
â”‚   â”‚   â”‚   â”œâ”€â”€ CreateForm.js (/form/create - Form creation page)
â”‚   â”‚   â”‚   â”œâ”€â”€ EditForm.js (/form/:id/edit - Edit form page)
â”‚   â”‚   â”‚   â”œâ”€â”€ ViewForm.js (/form/:id - View form page)
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ utils
â”‚   â”‚   â”‚   â”œâ”€â”€ api.js (Handles API calls to backend)
â”‚   â”‚   â”œâ”€â”€ App.js (Main component with routing)
â”‚   â”‚   â”œâ”€â”€ index.js (Entry file)
â”‚
â”œâ”€â”€ ðŸ“„ package.json (Dependencies for frontend)

// api.js (Handles API calls to backend)
import axios from 'axios';

const API_URL = 'http://localhost:5000/api/forms';

export const getForms = async () => axios.get(API_URL);
export const getFormById = async (id) => axios.get(`${API_URL}/${id}`);
export const createForm = async (formData) => axios.post(`${API_URL}/create`, formData);
export const updateForm = async (id, formData) => axios.put(`${API_URL}/${id}/edit`, formData);

// index.js (Entry file)
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './index.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// App.js (Main component with routing)
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import CreateForm from './pages/CreateForm';
import EditForm from './pages/EditForm';
import ViewForm from './pages/ViewForm';

const App = () => {
  return (
    <Router>
      <Routes>
        <Route path='/' element={<Home />} />
        <Route path='/form/create' element={<CreateForm />} />
        <Route path='/form/:id/edit' element={<EditForm />} />
        <Route path='/form/:id' element={<ViewForm />} />
      </Routes>
    </Router>
  );
};

export default App;
